# Welcome!


<!-- - UPDATE SURVEY DATA LINKS in both the intro and exercises part 2! PUT csv in 155 manual github. -->

<!-- - UPDATE sledding / cheese curd plot and question in 3c in light of observed patterns -->

<!-- UPDATE survey data in exercises -->


```{r setup, include = FALSE}
knitr::opts_chunk$set(collapse = TRUE, 
                      warning = FALSE,
                      message = FALSE,
                      fig.height = 2.75, 
                      fig.width = 4.25,
                      fig.env='figure',
                      fig.pos = 'h',
                      fig.align = 'center')
```


\
\


**Settling in**

- Sit in groups of 3-4. Your group should include:
    - *nobody* that you already know
    - at least 1 person who has used RStudio before
- Meet the people at your table. Share your names and pronouns. Discuss a high point of your summer break.
- You don't need to take notes today. Everything is in the online manual, which you’ll want to have open in class:
    - [https://ajohns24.github.io/155_Fall_2025/](https://ajohns24.github.io/155_Fall_2025/) (also linked in Moodle)
    - left side bar > Simple Linear Regression > 1 Welcome!



\
\
\
\




# Welcome {-}

\


**Statistical Modeling?!**

Statistical Modeling is the art and science of turning data into information about relationships of interest.
For example, the following are just a few Mac faculty / offices that use statistical models to study relationships:

- **Michelle Tong (BIOL):** [Making "Good" Choices: Social Isolation in Mice Exacerbates the Effects of Chronic Stress on Decision Making](https://www.frontiersin.org/journals/behavioral-neuroscience/articles/10.3389/fnbeh.2020.00081/full)    
- **Ariel James (PSYCH):** [Language Experience Predicts Eye Movements During Online Auditory Comprehension](https://journalofcognition.org/articles/10.5334/joc.285)
- **Sarah West (ECON):** [Redevelopment along arterial streets: The effects of light rail on land use change](https://onlinelibrary.wiley.com/doi/10.1111/1540-6229.12407)
- **Admissions** uses data to help understand potential enrollments
- **Athletics** uses data (eg: to better understand the relationship between sleep and outcomes)





\
\
\
\




**This class is designed for you.**    


- STAT 155 is a modern, non-traditional introduction to statistics. We'll explore sophisticated tools that typically aren't covered until a second course in statistics.       
    - This means:        
        - Non-majors taking this as a terminal course will take away highly applicable and marketable knowledge & skills.
        - Majors will gain a solid foundation from which to study more more advanced models & theory.
    
    - This does NOT mean that we're skipping a course! STAT 155 teaches introductory statistics content, but through a different lens than a traditional course (regression). Relatedly...

- Thriving in STAT 155 is NOT correlated with the following: your major, whether you think you're a "math person," whether you have any previous idea what "statistical modeling" is, etc. It IS correlated with effort (time, practice, studying, completing assignments without relying on AI) and engagement (attendance, attention, collaboration).

- STAT 155 emphasizes statistical applications and intuition over theory (and memorizing formulas). To focus on applications and intuition, we'll utilize statistical software (R/RStudio). It's assumed that you are totally new to RStudio! More on this later...

- I love teaching this course and hope you keep an open mind about it (and all courses you're taking)!




\
\
\
\


# Introductions & Data Principles {-}


\
\


**EXAMPLE 1: Tidy data**

You filled out a quick survey before class.
The result is a *tidy* data set!
Meaning:

- each row = a **case** or unit of observation (here, a student)
- each column = a measure on some **variable** of interest, which is either...
    - quantitative (numbers with units), e.g. `age`
    - categorical (discrete possibilities or categories), e.g. `major`
- each entry contains a single data value; no analysis, summaries, footnotes, comments, etc

\


```{r echo = FALSE, warning = FALSE, message = FALSE}
# Import the data
library(tidyverse)
library(DT)
library(gridExtra)

survey <- read_csv("../data/welcome_155_s22.csv") %>%
    select(-Timestamp)
names(survey) <- c("year", "age", "credits", "major", "division", "curds", "sledding", "birth", "mn")
datatable(survey)
```



\
\
\
\



**EXAMPLE 2: Academic interests**

Below are 3 plots of students' majors, major divisions, and years in school.

a. Summarize what you learned about the students in this class.

b. Suppose a researcher wants to use these data to learn about the academic interests among the broader Mac student body. Is this a good idea? Why or why not?

```{r echo = FALSE, fig.width = 8, fig.height = 5}
# Construct a plot of majors
g1 <- survey %>% 
  count(major) %>% 
  mutate(major = fct_reorder(major, n, .desc = TRUE)) %>% 
  ggplot(aes(x = major, y = n)) +
    geom_col() + 
    theme_minimal() + 
    theme(axis.text.x = element_text(angle = 60, vjust = 0.25)) + 
    xlab("")
g1
```


```{r echo = FALSE, fig.width = 8, fig.height = 3}
# Construct a plot of division
g2 <- survey %>% 
  count(division) %>% 
  mutate(division = fct_reorder(division, n, .desc = TRUE)) %>% 
  ggplot(aes(x = division, y = n)) +
    geom_col() + 
    theme_minimal() 


# Construct a plot of year in school
g3 <- survey %>% 
  mutate(year = fct_relevel(year, "first year", "sophomore", "junior", "senior")) %>% 
  ggplot(aes(x = year)) +
    geom_bar() + 
  theme_minimal()

grid.arrange(g2, g3, ncol=2)
```


\
\
\
\


**EXAMPLE 3: Relationships**

a. Left plot: Check out the relationship between the number of `credits` somebody has earned (y-axis) vs their `age` in months (x-axis). Describe what you observe.
b. Right plot: Check out the relationship between students' prior experience with trying tater tot hotdish and trying sledding. Describe what you observe.
c. Students who have tried hotdish are more likely to have gone sledding. Can we conclude that, if we give somebody free hotdish that they'll be more likely to try sledding?

<!-- fig.width = 7, fig.height = 3 -->

```{r echo = FALSE}
# Construct a plot of credits vs age
g1 <- survey %>% 
  filter(age < 500) %>% 
  ggplot(aes(y = credits, x = age)) +
    geom_point() + 
  theme_minimal()

# Construct a plot of sledding vs curds
g2 <- ggplot(survey, aes(y = sledding, x = curds)) +
  geom_jitter() + 
  theme_minimal()

grid.arrange(g1,g2,ncol=2)
```


\
\
\
\




**EXAMPLE 4: Conclusions**

Pause to make sure you're still in sync as a group!!

a. Check out the breakdown of students' `birth` months.   
    - Are more students born in the 1st or 2nd half of the year?
    - Assuming that this class is representative of the broader student body, does this provide substantial evidence of a broader birth trend at Mac?

b. Check out the breakdown of whether students lived in MN before attending Mac.   
    - Did fewer than half of students in this class live in MN before?
    - Assuming that this class is representative of the broader student body, does this provide substantial evidence that fewer than half of Mac students lived in MN before?


```{r echo = FALSE, fig.width = 7, fig.height = 3}
# Construct a plot of birth months
g1 <- ggplot(survey, aes(x = birth)) +
  geom_bar() + 
  theme_minimal()

# Construct a plot of mn
g2 <- ggplot(survey, aes(x = mn)) +
  geom_bar() + 
  theme_minimal()

grid.arrange(g1,g2,ncol=2)
```






\
\
\
\


**PAUSE**

Once you're finished with the above exercises, let the instructor know.
Do not work ahead.
Instead, use any extra time to chat with one another!





\
\
\
\



**Data principles**

The exercises above help illustrate some important data principles.


-   **Data collection**       
    **Sampling bias** occurs when a sampling method produces samples that are not representative of the population of interest, thus can produce biased results. Example: Our STAT 155 sample would produce a biased understanding of Mac students' academic interests.^[photo credits: De Evan-Amos - Trabajo propio, Dominio público, https://commons.wikimedia.org/w/index.php?curid=11926907 and David Adam Kess, CC BY-SA 4.0 <https://creativecommons.org/licenses/by-sa/4.0>, via Wikimedia Commons]        
    ```{r echo = FALSE, message = FALSE}
    library(cowplot)
    ggdraw() + 
      draw_image("https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Plain-M%26Ms-Pile.jpg/1920px-Plain-M%26Ms-Pile.jpg", width = 0.5) + 
      draw_image("https://upload.wikimedia.org/wikipedia/commons/0/0b/%28M%26M%27s%29%2C_Blue.JPG", width = 0.5, x = 0.5)
    ```




<!-- - **response bias**     -->
<!--     Even if we design a good sample, there might still be response bias: when subjects give incorrect responses (purposely or not). This could be the result of a direct lie, question wording, the position of the data collector, etc. -->


- **Data analysis**       
    -   **correlation vs causation**    
        An *observational* study in which data are observed with NO manipulation of the subjects' environment may reveal a correlation/association. However, cause-and-effect must be established via a controlled experiment (or causal inference tools). Example: There's no cause-and-effect relationship between text messages and cheese curds.^[photo credit: @Claire_M]        
        ```{r echo = FALSE}
        ggdraw() + 
          draw_image("../images/cat_correlation.png", width = 0.9)
        ```


    - **exploratory vs inferential questions**    
        - **Exploratory question:** What did we observe among our *sample* data?    
            (eg: did fewer than half of students in *our class* live in MN before?)
        - **Inferential question:** From this, what can we conclude about the broader *population*?    
            (eg: can we conclude from our data that fewer than half of *Mac* students lived in MN?) 


\
\


- **Data ethics (not addressed in the questions above)**        
    We must always ask:       
    - How / by whom / why / when were these data collected?
    - What data were collected and how are they being used?
    - What are the implications of the data analysis, both individual and societal?



\
\



- **The 5 W's + H: who, what, when, where, why, and how?**    
    From the [course notes](https://mac-stat.github.io/Stat155Notes/data-context.html):   
    - **Who** collected this data?
    - **What** is being measured?
    - **Where** were the data collected? One location? Multiple locations?
    - **When** was the data collected? One point in time? Over time?
    - **How** were the data collected? What instruments or methods were used? What questions were asked and how? Online survey? By phone? In person?
    - **Why** were they collected? For profit? For academic research? Are there conflicts of interest?







\
\
\
\





# Exercises {-}

\

**MOTIVATION**

"Doing" statistical modeling and working with data in general requires statistical software -- calculators, spreadsheet functionality, etc don't cut it.
We'll exclusively use **R** and **RStudio**:

```{r echo = FALSE, fig.cap = "Figure 1.1 from [A ModernDive into R and the Tidyverse](https://moderndive.com/1-getting-started.html)."}
knitr::include_graphics("../images/r_vs_rstudio.png")
```


\



Why R/RStudio?

-   it's free
-   it's open source (the code is free & anybody can contribute to it)
-   it has a huge online community (which is helpful for when you get stuck)
-   it's an industry standard
-   it can be used to create *reproducible* and lovely documents (including this online manual!)
-   Fun fact: it was started by Mac alum JJ Allaire and beta-tested at Mac!




\
\
\
\



**IMPORTANT: RStudio is NOT the point of this course!!**


- RStudio = a hammer    
    - Simply a tool needed for statistical modeling that you'll learn through lots of practice, trial, and error.
    - Alone, it's not very interesting.
    
- You = a carpenter   
    - You will develop the knowledge about designing statistical analyses that are useful and correct.
    - You will learn to build these analyses with the appropriate tools (RStudio).
    - Your analyses, not use of RStudio, are the interesting part!
    
- You'll pick up the RStudio basics needed for introductory statistical models. To learn more about RStudio more generally you should take COMP/STAT 112.  




\
\
\
\


**DIRECTIONS**

- Go to Mac's RStudio server: [https://rstudio.macalester.edu/](https://rstudio.macalester.edu/)        
    - Sign in with your Mac username (eg: ajohns24) and password.
    - NOTE: After class, you'll install R/RStudio on your own machine and will not be using the server.
    
- Work on these exercises in your groups. (Collaboration is a key learning goal in this course, which we'll discuss in the coming classes.)       
    - Take your time. You won't hand anything in and can finish up outside of class.
    - We will not discuss these exercises as a class. Your group should ask me questions as I walk around the room.





\
\
\
\



## Exercise 1: Use R as a calculator {-}

Type the following lines in the **console** (bottom left), one by one, hitting Return/Enter after each line.
In some cases you might even get an error!
This error is *important* to learning how R code does and doesn't work.

```{r eval = FALSE}
4 + 2
```

```{r eval = FALSE}
4^2
```

```{r eval = FALSE}
4*2
```

```{r eval = FALSE}
4(2)
```




\
\
\
\


## Exercise 2: Functions and arguments {-}

We can also use built-in **functions** to perform common tasks.
These functions have *names* and require information about *arguments* in order to run:

`function(argument)`

Try out the following functions *one by one* in the RStudio console.
For each function, note its...

- *name*
- the *argument* or information it needs to run
- what *output* it produces (what the function *does*)
- how the name *connects* to what the function does

```{r eval = FALSE}
sqrt(9)
```

```{r eval = FALSE}
nchar("macalester")
```

```{r eval = FALSE}
sqrt(nchar("snow"))
```

Some functions have *more than 1 argument*, separated by commas:

`function(argument1 = ___, argument2 = ___)`

Try out the following, one by one.

```{r eval = FALSE}
rep(x = 2, times = 5)
```

```{r eval = FALSE}
rep(times = 5, x = 2)
```

```{r eval = FALSE}
rep(2, 5)
```

```{r eval = FALSE}
rep(5, 2)
```

Finally, R is case sensitive.
Try using `Rep()` instead of `rep()`.
Take time to read the **error message**!

```{r eval = FALSE}
Rep(5, 2)
```


\
\
\
\


## Exercise 3: Save it for later {-}

We'll often want to store some R output for later use.
In R:

`name <- output`

where `name` is the name under which to store a result, `output` is the result we wish to store, and `<-` is the **assignment operator** (I think of this as an arrow pointing the `output` into the `name`).

IMPORTANT: Try out each line *one at a time*.
Why doesn't the first line produce any output?

```{r eval = FALSE}
degrees_c <- -13
```

```{r eval = FALSE}
degrees_c
```

```{r eval = FALSE}
degrees_c * (9/5) + 32
```




\
\
\
\




## Exercise 4: Import data {-}


Next, let's work with some **data**!!
The first step is importing our data into RStudio.
How we do this depends on:

1. file format (eg: .xls Excel spreadsheet, .csv, .txt)
2. file location (eg: online, on your desktop, built into RStudio itself).

The data from the survey you took before class is stored as a **.csv** file **online**.
Import this data using the `read_csv()` function, and store it as `survey` using the code below:

```{r eval = FALSE}
# Load the "tidyverse" package which contains the read_csv() function
library(tidyverse)

# Import the data
survey <- read_csv("https://mac-stat.github.io/data/112_fall_2024_survey.csv")
```


\


**Check out the data**

In the Environment tab in the upper right pane of RStudio, click on `survey`. What happens?!





\
\
\
\



## Exercise 5: Get to know the data {-}

PAUSE: Make sure you're still in sync with your group.

Before we can learn anything from our data, we must understand its structure.
For each function below:

- try it out
- discuss with your group what the function *does*
- discuss with your group how the function's *name* connects to what it *does*


```{r eval = FALSE}
dim(survey)
```

```{r eval = FALSE}
nrow(survey)
```

```{r eval = FALSE}
head(survey)
```

```{r eval = FALSE}
head(survey, 3)
```

```{r eval = FALSE}
tail(survey)
```

```{r eval = FALSE}
names(survey)
```

```{r eval = FALSE}
str(survey)
```

\
\
\
\



## Exercise 6: Code = communication {-}

It's important to recognize from day 1 that **code is a form of communication**, both to yourself and others!!!!!
Code structure and details are important to readability and clarity, just as grammar, punctuation, spelling, paragraphs, and line spacing are important in written essays.
All of the code below *works*, but has bad structure.
With your group, discuss what is unfortunate about each line, then make it better.


```{r eval = FALSE}
seq(from=1,to=9,by=2)
seq(from = 1, to=9,by=2)
my_output <- -13
thisisthetemperaturetodayincelsius <- -13
this_is_the_temperature_today_in_celsius <- -13
```

\
\
\
\


## Exercise 7: You will make so many mistakes! {-}

Mistakes are common when, and even *important* to, learning any new language.
You'll get better and better at interpreting error messages, finding help, and fixing errors.
In addition to finding help online, R has built-in **help files**.
For example:       

-   In the console, type `?rep` and press Return/Enter.
-   Check out the documentation file that pops up in the Help tab (lower right).
-   Quickly scroll through, noting the type of information provided.
-   Pause at the "Examples" section at the bottom -- perhaps the most useful section! Try out a couple of the provided examples in your console.





\
\
\
\



## Exercise 8: Your turn {-}

Use R code to do the following:

a. Import & name data on different Himalayan peaks from the url below:       
    `https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-22/peaks.csv`
    NOTE: A **codebook**, i.e. a description of the data, is [here](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-09-22/readme.md).
    
b. Use a function to show which variables are recorded on each peak.

c. How many peaks are included in the dataset? Answer this using a *function*, not by counting up the rows yourself.

d. Show the first 6 rows of the dataset. NOTE: This gives us a quick glimpse without having to print out the entire dataset!


\
\
\
\



## Exercise 9: Make a "cheat sheet" {-}

You will continue to pick up new R code and ideas.
You're highly encouraged to start tracking this in a cheat sheet (eg: in a Google doc).
The cheat sheet will be a handy reference for you, and the act of making it will help deepen your understanding and retention.




\
\
\
\






# Wrap-up {-}

\


**Finish the activity**

If you didn’t finish the activity during class, no problem!
Be sure to complete the activity outside of class, review the solutions in the online manual, and ask any questions on Slack or in office hours.

\
\


**Online course manual (linked on Moodle)**

- Bookmark this!
- All in-class activities and other resources will be compiled here, making for easier review.
- There are solutions at the bottom of each activity. Consult them!
- There's a daily Course Schedule which outlines what we’re doing, what’s due, and where to find this material each day.


\

**Moodle**

Where you can access a big picture calendar (which you should integrate into your Google calendar!) and all course materials (free!). Also where you will submit work.


\

**Syllabus (linked on Moodle)**

You're expected to carefully review the syllabus outside of class.



\



**Upcoming due dates**

- If you were approved from the waitlist, be sure to approach me after class & register for the course *today*. At that point you will be added to Moodle.

- Due Thursday: Checkpoint "CP" 1 (10 minutes before the start of your section)    
    - Check out the syllabus for policies.
    - This is the longest CP of the semester!
  
- Due Tuesday: CP 2 (10 minutes before the start of your section)
    







\
\
\
\



# Solutions {-}


## Exercise 1: Use R as a calculator {-}

```{r}
4 + 2
4^2
4*2
#4(2) # We need to use * for multiplication
```


## Exercise 2: Functions and arguments {-}


```{r}
# Calculate the square root of 9
sqrt(9)

# Calculate the number of characters in the word "macalester"
nchar("macalester")

# Calculate the square root of the number of characters in the word "snow"
sqrt(nchar("snow"))
```



```{r}
# Repeat the number 2, 5 times
rep(x = 2, times = 5)

# Repeat the number 2, 5 times
rep(times = 5, x = 2)

# Repeat the number 2, 5 times
rep(2, 5)

# Repeat the number 5, 2 times
rep(5, 2)
```




## Exercise 3: Save it for later {-}


```{r}
# Nothing shows up -- all we're doing here is storing -13 as degrees_c
degrees_c <- -13

# Print the contents of degrees_c
degrees_c

# We can "do math" with the contents of degrees_c
degrees_c * (9/5) + 32
```




## Exercise 4: Import data {-}



```{r message = FALSE, warning = FALSE}
# Load the tidyverse package
library(tidyverse)

# Import the data
survey <- read_csv("https://mac-stat.github.io/data/112_fall_2024_survey.csv")
```



## Exercise 5: Get to know the data {-}


```{r}
# Dimensions of the survey data set
# First number = number of rows
# Second number = number of columns
dim(survey)
```

```{r}
# Number of rows in the survey data set
nrow(survey)
```

```{r}
# First 6 rows (the head) of the survey data set
head(survey)
```

```{r}
# First 3 rows of the survey data set
head(survey, 3)
```

```{r}
# Last 6 rows (the tail) of the survey data set
tail(survey)
```

```{r}
# Names of the variables in the survey data set
names(survey)
```

```{r}
# Structure of all variables in the survey data set
str(survey)
```




## Exercise 6: Code = communication {-}


```{r}
# Make it less smooshy. Add spaces!
seq(from = 1, to = 9, by = 2)

# Use consistent spacing
seq(from = 1, to = 9, by = 2)

# Use more descriptive names when storing objects
my_output <- -13

# Use a shorter and easier to read name
celsius_today <- -13
CelsiusToday  <- -13
```


## Exercise 7: You will make so many mistakes! {-}


## Exercise 8: Your turn {-}

```{r}
# a
peaks <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-22/peaks.csv")

# b
names(peaks)

# c
dim(peaks)
nrow(peaks)

# d
head(peaks)
```




